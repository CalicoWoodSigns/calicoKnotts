-- KBF Data Management System - Database Structure
-- SQL Server 2019 Compatible
-- Run this script to create the database tables

-- Create EMPLOYEEINFO table
CREATE TABLE EMPLOYEEINFO (
    EID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME NVARCHAR(50) NOT NULL UNIQUE,
    FIRSTNAME NVARCHAR(50) NOT NULL,
    LASTNAME NVARCHAR(50) NOT NULL,
    ADDRESS1 NVARCHAR(100),
    ADDRESS2 NVARCHAR(100),
    CITY NVARCHAR(50),
    STATE NVARCHAR(10),
    PHONE NVARCHAR(20),
    PASSWORD NVARCHAR(50) NOT NULL,
    ACCESSLEVEL INT NOT NULL DEFAULT 1,
    CREATED_DATE DATETIME DEFAULT GETDATE(),
    MODIFIED_DATE DATETIME DEFAULT GETDATE()
);

-- Create EMPLOYEESALES table
CREATE TABLE EMPLOYEESALES (
    SALEID INT IDENTITY(1,1) PRIMARY KEY,
    EID INT NOT NULL,
    SALEDATE DATETIME NOT NULL DEFAULT GETDATE(),
    AMOUNT DECIMAL(10,2) NOT NULL,
    HOURS DECIMAL(5,2) NOT NULL,
    NOTES NVARCHAR(MAX),
    FIRSTNAME NVARCHAR(50), -- Denormalized for reporting
    CREATED_DATE DATETIME DEFAULT GETDATE(),
    MODIFIED_DATE DATETIME DEFAULT GETDATE(),
    
    -- Foreign key constraint
    CONSTRAINT FK_EMPLOYEESALES_EID FOREIGN KEY (EID) REFERENCES EMPLOYEEINFO(EID)
);

-- Create indexes for performance
CREATE INDEX IX_EMPLOYEESALES_EID ON EMPLOYEESALES(EID);
CREATE INDEX IX_EMPLOYEESALES_SALEDATE ON EMPLOYEESALES(SALEDATE);
CREATE INDEX IX_EMPLOYEESALES_AMOUNT ON EMPLOYEESALES(AMOUNT);
CREATE INDEX IX_EMPLOYEEINFO_USERNAME ON EMPLOYEEINFO(USERNAME);
CREATE INDEX IX_EMPLOYEEINFO_ACCESSLEVEL ON EMPLOYEEINFO(ACCESSLEVEL);

-- Add some helpful views
CREATE VIEW vw_EmployeeSalesSummary AS
SELECT 
    ei.EID,
    ei.FIRSTNAME,
    ei.LASTNAME,
    ei.USERNAME,
    COUNT(es.SALEID) as TotalSales,
    SUM(es.AMOUNT) as TotalAmount,
    SUM(es.HOURS) as TotalHours,
    AVG(es.AMOUNT) as AvgAmount,
    CASE 
        WHEN SUM(es.HOURS) > 0 THEN SUM(es.AMOUNT) / SUM(es.HOURS)
        ELSE 0
    END as SalesPerHour,
    MAX(es.SALEDATE) as LastSaleDate,
    MIN(es.SALEDATE) as FirstSaleDate
FROM EMPLOYEEINFO ei
LEFT JOIN EMPLOYEESALES es ON ei.EID = es.EID
GROUP BY ei.EID, ei.FIRSTNAME, ei.LASTNAME, ei.USERNAME;

-- Create view for today's sales
CREATE VIEW vw_TodaysSales AS
SELECT 
    ei.FIRSTNAME,
    ei.LASTNAME,
    es.AMOUNT,
    es.HOURS,
    es.SALEDATE,
    es.NOTES
FROM EMPLOYEESALES es
INNER JOIN EMPLOYEEINFO ei ON es.EID = ei.EID
WHERE CONVERT(date, es.SALEDATE) = CONVERT(date, GETDATE());

PRINT 'Database structure created successfully!'
PRINT 'Tables created: EMPLOYEEINFO, EMPLOYEESALES'
PRINT 'Views created: vw_EmployeeSalesSummary, vw_TodaysSales'
